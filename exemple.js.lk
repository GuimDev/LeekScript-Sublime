abs(number);
acos(argument);
arrayMax(array);
arrayMin(array);
asin(argument);
atan(argument);
atan2(y, x);
average(array);
canUseChip(chip, leek);
canUseChipOnCell(chip, cell);
canUseWeapon(leek);
canUseWeaponOnCell(cell);
cbrt(number);
ceil(number);
charAt(string, position);
contains(string, search);
cos(angle);
count(array);
debug(object);
debugE(object);
debugW(object);
endsWith(string, suffix);
exp(number);
fill(array, value);
fill(array, value, size);
floor(number);
getAbsoluteShield();
getAbsoluteShield(leek);
getAgility();
getAgility(leek);
getAliveAllies();
getAliveEnemies();
getAliveEnemiesCount();
getAllies();
getAlliesCount();
getAlliesLife();
getCell();
getCell(leek);
getCellContent(cell);
getCellDistance(cell1, cell2);
getCellFromXY(x, y);
getCellToUseChip(chip, leek);
getCellToUseChipOnCell(chip, cell);
getCellToUseWeapon(leek);
getCellToUseWeaponOnCell(cell);
getCellX(cell);
getCellY(cell);
getChipCooldown(chip);
getChipCost(chip);
getChipEffects(chip);
getChipMaxScope(chip);
getChipMinScope(chip);
getChipName(chip);
getChips();
getChips(leek);
getChipTargets(chip, cell);
getCores();
getCores(leek);
getCurrentCooldown(chip);
getDeadAllies();
getDeadEnemies();
getDeadEnemiesCount();
getDistance(cell1, cell2);
getEffects();
getEffects(leek);
getEnemies();
getEnemiesCount();
getEnemiesLife();
getFarthestAlly();
getFarthestEnemy();
getFightContext();
getFightType();
getForce();
getForce(leek);
getFrequency();
getFrequency(leek);
getInstructionsCount();
getLeek();
getLeekOnCell(cell);
getLevel();
getLevel(leek);
getLife();
getLife(leek);
getMessageAuthor(message);
getMessageParams(message);
getMessages();
getMessages(leek);
getMessageType(message);
getMP();
getMP(leek);
getName();
getName(leek);
getNearestAlly();
getNearestEnemy();
getNextPlayer();
getPath(cell1, cell2);
getPathLength(cell1, cell2);
getPreviousPlayer();
getRelativeShield();
getRelativeShield(leek);
getTotalLife();
getTotalLife(leek);
getTP();
getTP(leek);
getTurn();
getWeapon();
getWeapon(leek);
getWeaponCost(weapon);
getWeaponEffects(weapon);
getWeaponMaxScope(weapon);
getWeaponMinScope(weapon);
getWeaponName(weapon);
getWeapons();
getWeapons(leek);
getWeaponTargets(cell);
hypot(x, y);
inArray(array, element);
include(ai);
indexOf(string, search);
indexOf(string, search, start);
insert(array, element, position);
isAlive(leek);
isAlly(leek);
isDead(leek);
isEmpty(array);
isEmptyCell(cell);
isEnemy(leek);
isInlineChip(chip);
isInlineWeapon(weapon);
isLeek(cell);
isObstacle(cell);
isOnSameLine(cell1, cell2);
join(array, glue);
length(string);
log(number);
log10(number);
max(a, b);
min(a, b);
moveAwayFrom(leek);
moveAwayFrom(leek, mp);
moveAwayFromCell(cell);
moveAwayFromCell(cell, mp);
moveAwayFromCells(cells);
moveAwayFromCells(cells, mp);
moveAwayFromLeeks(leeks);
moveAwayFromLeeks(leeks, mp);
moveAwayFromLine(cell1, cell2);
moveAwayFromLine(cell1, cell2, mp);
moveToward(leek);
moveToward(leek, mp);
moveTowardCell(cell);
moveTowardCell(cell, mp);
moveTowardCells(cells);
moveTowardCells(cells, mp);
moveTowardLeeks(leeks);
moveTowardLeeks(leeks, mp);
moveTowardLine(cell1, cell2);
moveTowardLine(cell1, cell2, mp);
pop(array);
pow(base, exp);
push(array, element);
pushAll(array, elements);
rand();
randFloat(a, b);
randInt(a, b);
remove(array, position);
removeElement(array, element);
replace(search, replace, subject);
reverse(array);
round(number);
say(message);
search(array, element);
search(array, element, start);
sendAll(type, params);
sendTo(leek, type, params);
setWeapon(weapon);
shift(array);
shuffle(array);
signum(number);
sin(angle);
sort(array);
sort(array, order);
split(string, delimiter);
split(string, delimiter, limit);
sqrt(number);
startsWith(string, prefix);
subArray(array, start, size);
substring(string, start);
substring(string, start, length);
sum(array);
tan(angle);
toDegrees(radians);
toLower(string);
toRadians(degrees);
toUpper(string);
unshift(array, element);
useChip(chip, leek);
useChipOnCell(chip, cell);
useWeapon(leek);
useWeaponOnCell(cell);
CELL_EMPTY;
CELL_OBSTACLE;
CELL_PLAYER;
CHIP_ADRENALINE;
CHIP_ARMOR;
CHIP_BANDAGE;
CHIP_CURE;
CHIP_DOPING;
CHIP_DRIP;
CHIP_FLAME;
CHIP_FLASH;
CHIP_FORTRESS;
CHIP_HELMET;
CHIP_ICE;
CHIP_ICEBERG;
CHIP_LEATHER_BOOTS;
CHIP_LIBERATION;
CHIP_LIGHTNING;
CHIP_METEORITE;
CHIP_MOTIVATION;
CHIP_PEBBLE;
CHIP_PROTEIN;
CHIP_RAGE;
CHIP_RAMPART;
CHIP_REFLEXES;
CHIP_RESURRECTION;
CHIP_ROCK;
CHIP_ROCKFALL;
CHIP_SEVEN_LEAGUE_BOOTS;
CHIP_SHIELD;
CHIP_SHOCK;
CHIP_SPARK;
CHIP_STALACTITE;
CHIP_STEROID;
CHIP_STRETCHING;
CHIP_VACCINE;
CHIP_WALL;
CHIP_WARM_UP;
CHIP_WINGED_BOOTS;
E;
EFFECT_ABSOLUTE_SHIELD;
EFFECT_AGILITY;
EFFECT_DAMAGE;
EFFECT_DEBUFF;
EFFECT_FORCE;
EFFECT_HEAL;
EFFECT_MP;
EFFECT_RELATIVE_SHIELD;
EFFECT_TP;
FIGHT_CONTEXT_CHALLENGE;
FIGHT_CONTEXT_GARDEN;
FIGHT_CONTEXT_TEST;
FIGHT_CONTEXT_TOURNAMENT;
FIGHT_TYPE_FARMER;
FIGHT_TYPE_SOLO;
FIGHT_TYPE_TEAM;
INSTRUCTIONS_LIMIT;
MAX_TURNS;
MESSAGE_ATTACK;
MESSAGE_BUFF_AGILITY;
MESSAGE_BUFF_FORCE;
MESSAGE_BUFF_MP;
MESSAGE_BUFF_TP;
MESSAGE_CUSTOM;
MESSAGE_DEBUFF;
MESSAGE_HEAL;
MESSAGE_MOVE_AWAY;
MESSAGE_MOVE_AWAY_CELL;
MESSAGE_MOVE_TOWARD;
MESSAGE_MOVE_TOWARD_CELL;
MESSAGE_SHIELD;
PI;
SORT_ASC;
SORT_DESC;
USE_FAILED;
USE_INVALID_COOLDOWN;
USE_INVALID_POSITION;
USE_INVALID_TARGET;
USE_NOT_ENOUGH_TP;
USE_SUCCESS;
WEAPON_DESTROYER;
WEAPON_DOUBLE_GUN;
WEAPON_ELECTRISOR;
WEAPON_FLAME_THROWER;
WEAPON_GAZOR;
WEAPON_GRENADE_LAUNCHER;
WEAPON_LASER;
WEAPON_MACHINE_GUN;
WEAPON_MAGNUM;
WEAPON_M_LASER;
WEAPON_PISTOL;
WEAPON_SHOTGUN;