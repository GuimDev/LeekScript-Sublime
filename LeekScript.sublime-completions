{
	"scope": "source.lk - support.function.js",

	"completions":
	[
		"lk",
		/*
		 *	^(\w*)\(\);$							{ "trigger": "$1", "contents": "$1()" },
		 *	^(\w*)\((\w*)\);$						{ "trigger": "$1", "contents": "$1(\${1:$2})" },
		 *	^(\w*)\((\w*), (\w*)\);$				{ "trigger": "$1", "contents": "$1(\${1:$2}, \${2:$3})" },
		 *	^(\w*)\((\w*), (\w*), (\w*)\);$			{ "trigger": "$1", "contents": "$1(\${1:$2}, \${2:$3}, \${3:$4})" },
		 *	^(\w*);$								{ "trigger": "$1", "contents": "$1" },
		 */
		{ "trigger": "abs", "contents": "abs(${1:number})" },
		{ "trigger": "acos", "contents": "acos(${1:argument})" },
		{ "trigger": "arrayMax", "contents": "arrayMax(${1:array})" },
		{ "trigger": "arrayMin", "contents": "arrayMin(${1:array})" },
		{ "trigger": "asin", "contents": "asin(${1:argument})" },
		{ "trigger": "atan", "contents": "atan(${1:argument})" },
		{ "trigger": "atan2", "contents": "atan2(${1:y}, ${2:x})" },
		{ "trigger": "average", "contents": "average(${1:array})" },
		{ "trigger": "canUseChip", "contents": "canUseChip(${1:chip}, ${2:leek})" },
		{ "trigger": "canUseChipOnCell", "contents": "canUseChipOnCell(${1:chip}, ${2:cell})" },
		{ "trigger": "canUseWeapon", "contents": "canUseWeapon(${1:leek})" },
		{ "trigger": "canUseWeaponOnCell", "contents": "canUseWeaponOnCell(${1:cell})" },
		{ "trigger": "cbrt", "contents": "cbrt(${1:number})" },
		{ "trigger": "ceil", "contents": "ceil(${1:number})" },
		{ "trigger": "charAt", "contents": "charAt(${1:string}, ${2:position})" },
		{ "trigger": "contains", "contents": "contains(${1:string}, ${2:search})" },
		{ "trigger": "cos", "contents": "cos(${1:angle})" },
		{ "trigger": "count", "contents": "count(${1:array})" },
		{ "trigger": "debug", "contents": "debug(${1:object})" },
		{ "trigger": "debugE", "contents": "debugE(${1:object})" },
		{ "trigger": "debugW", "contents": "debugW(${1:object})" },
		{ "trigger": "endsWith", "contents": "endsWith(${1:string}, ${2:suffix})" },
		{ "trigger": "exp", "contents": "exp(${1:number})" },
		{ "trigger": "fill", "contents": "fill(${1:array}, ${2:value})" },
		{ "trigger": "fill", "contents": "fill(${1:array}, ${2:value}, ${3:size})" },
		{ "trigger": "floor", "contents": "floor(${1:number})" },
		{ "trigger": "getAbsoluteShield", "contents": "getAbsoluteShield()" },
		{ "trigger": "getAbsoluteShield", "contents": "getAbsoluteShield(${1:leek})" },
		{ "trigger": "getAgility", "contents": "getAgility()" },
		{ "trigger": "getAgility", "contents": "getAgility(${1:leek})" },
		{ "trigger": "getAliveAllies", "contents": "getAliveAllies()" },
		{ "trigger": "getAliveEnemies", "contents": "getAliveEnemies()" },
		{ "trigger": "getAliveEnemiesCount", "contents": "getAliveEnemiesCount()" },
		{ "trigger": "getAllies", "contents": "getAllies()" },
		{ "trigger": "getAlliesCount", "contents": "getAlliesCount()" },
		{ "trigger": "getAlliesLife", "contents": "getAlliesLife()" },
		{ "trigger": "getCell", "contents": "getCell()" },
		{ "trigger": "getCell", "contents": "getCell(${1:leek})" },
		{ "trigger": "getCellContent", "contents": "getCellContent(${1:cell})" },
		{ "trigger": "getCellDistance", "contents": "getCellDistance(${1:cell1}, ${2:cell2})" },
		{ "trigger": "getCellFromXY", "contents": "getCellFromXY(${1:x}, ${2:y})" },
		{ "trigger": "getCellToUseChip", "contents": "getCellToUseChip(${1:chip}, ${2:leek})" },
		{ "trigger": "getCellToUseChipOnCell", "contents": "getCellToUseChipOnCell(${1:chip}, ${2:cell})" },
		{ "trigger": "getCellToUseWeapon", "contents": "getCellToUseWeapon(${1:leek})" },
		{ "trigger": "getCellToUseWeaponOnCell", "contents": "getCellToUseWeaponOnCell(${1:cell})" },
		{ "trigger": "getCellX", "contents": "getCellX(${1:cell})" },
		{ "trigger": "getCellY", "contents": "getCellY(${1:cell})" },
		{ "trigger": "getChipCooldown", "contents": "getChipCooldown(${1:chip})" },
		{ "trigger": "getChipCost", "contents": "getChipCost(${1:chip})" },
		{ "trigger": "getChipEffects", "contents": "getChipEffects(${1:chip})" },
		{ "trigger": "getChipMaxScope", "contents": "getChipMaxScope(${1:chip})" },
		{ "trigger": "getChipMinScope", "contents": "getChipMinScope(${1:chip})" },
		{ "trigger": "getChipName", "contents": "getChipName(${1:chip})" },
		{ "trigger": "getChips", "contents": "getChips()" },
		{ "trigger": "getChips", "contents": "getChips(${1:leek})" },
		{ "trigger": "getChipTargets", "contents": "getChipTargets(${1:chip}, ${2:cell})" },
		{ "trigger": "getCores", "contents": "getCores()" },
		{ "trigger": "getCores", "contents": "getCores(${1:leek})" },
		{ "trigger": "getCurrentCooldown", "contents": "getCurrentCooldown(${1:chip})" },
		{ "trigger": "getDeadAllies", "contents": "getDeadAllies()" },
		{ "trigger": "getDeadEnemies", "contents": "getDeadEnemies()" },
		{ "trigger": "getDeadEnemiesCount", "contents": "getDeadEnemiesCount()" },
		{ "trigger": "getDistance", "contents": "getDistance(${1:cell1}, ${2:cell2})" },
		{ "trigger": "getEffects", "contents": "getEffects()" },
		{ "trigger": "getEffects", "contents": "getEffects(${1:leek})" },
		{ "trigger": "getEnemies", "contents": "getEnemies()" },
		{ "trigger": "getEnemiesCount", "contents": "getEnemiesCount()" },
		{ "trigger": "getEnemiesLife", "contents": "getEnemiesLife()" },
		{ "trigger": "getFarthestAlly", "contents": "getFarthestAlly()" },
		{ "trigger": "getFarthestEnemy", "contents": "getFarthestEnemy()" },
		{ "trigger": "getFightContext", "contents": "getFightContext()" },
		{ "trigger": "getFightType", "contents": "getFightType()" },
		{ "trigger": "getForce", "contents": "getForce()" },
		{ "trigger": "getForce", "contents": "getForce(${1:leek})" },
		{ "trigger": "getFrequency", "contents": "getFrequency()" },
		{ "trigger": "getFrequency", "contents": "getFrequency(${1:leek})" },
		{ "trigger": "getInstructionsCount", "contents": "getInstructionsCount()" },
		{ "trigger": "getLeek", "contents": "getLeek()" },
		{ "trigger": "getLeekOnCell", "contents": "getLeekOnCell(${1:cell})" },
		{ "trigger": "getLevel", "contents": "getLevel()" },
		{ "trigger": "getLevel", "contents": "getLevel(${1:leek})" },
		{ "trigger": "getLife", "contents": "getLife()" },
		{ "trigger": "getLife", "contents": "getLife(${1:leek})" },
		{ "trigger": "getMessageAuthor", "contents": "getMessageAuthor(${1:message})" },
		{ "trigger": "getMessageParams", "contents": "getMessageParams(${1:message})" },
		{ "trigger": "getMessages", "contents": "getMessages()" },
		{ "trigger": "getMessages", "contents": "getMessages(${1:leek})" },
		{ "trigger": "getMessageType", "contents": "getMessageType(${1:message})" },
		{ "trigger": "getMP", "contents": "getMP()" },
		{ "trigger": "getMP", "contents": "getMP(${1:leek})" },
		{ "trigger": "getName", "contents": "getName()" },
		{ "trigger": "getName", "contents": "getName(${1:leek})" },
		{ "trigger": "getNearestAlly", "contents": "getNearestAlly()" },
		{ "trigger": "getNearestEnemy", "contents": "getNearestEnemy()" },
		{ "trigger": "getNextPlayer", "contents": "getNextPlayer()" },
		{ "trigger": "getPath", "contents": "getPath(${1:cell1}, ${2:cell2})" },
		{ "trigger": "getPathLength", "contents": "getPathLength(${1:cell1}, ${2:cell2})" },
		{ "trigger": "getPreviousPlayer", "contents": "getPreviousPlayer()" },
		{ "trigger": "getRelativeShield", "contents": "getRelativeShield()" },
		{ "trigger": "getRelativeShield", "contents": "getRelativeShield(${1:leek})" },
		{ "trigger": "getTotalLife", "contents": "getTotalLife()" },
		{ "trigger": "getTotalLife", "contents": "getTotalLife(${1:leek})" },
		{ "trigger": "getTP", "contents": "getTP()" },
		{ "trigger": "getTP", "contents": "getTP(${1:leek})" },
		{ "trigger": "getTurn", "contents": "getTurn()" },
		{ "trigger": "getWeapon", "contents": "getWeapon()" },
		{ "trigger": "getWeapon", "contents": "getWeapon(${1:leek})" },
		{ "trigger": "getWeaponCost", "contents": "getWeaponCost(${1:weapon})" },
		{ "trigger": "getWeaponEffects", "contents": "getWeaponEffects(${1:weapon})" },
		{ "trigger": "getWeaponMaxScope", "contents": "getWeaponMaxScope(${1:weapon})" },
		{ "trigger": "getWeaponMinScope", "contents": "getWeaponMinScope(${1:weapon})" },
		{ "trigger": "getWeaponName", "contents": "getWeaponName(${1:weapon})" },
		{ "trigger": "getWeapons", "contents": "getWeapons()" },
		{ "trigger": "getWeapons", "contents": "getWeapons(${1:leek})" },
		{ "trigger": "getWeaponTargets", "contents": "getWeaponTargets(${1:cell})" },
		{ "trigger": "hypot", "contents": "hypot(${1:x}, ${2:y})" },
		{ "trigger": "inArray", "contents": "inArray(${1:array}, ${2:element})" },
		{ "trigger": "include", "contents": "include(${1:ai})" },
		{ "trigger": "indexOf", "contents": "indexOf(${1:string}, ${2:search})" },
		{ "trigger": "indexOf", "contents": "indexOf(${1:string}, ${2:search}, ${3:start})" },
		{ "trigger": "insert", "contents": "insert(${1:array}, ${2:element}, ${3:position})" },
		{ "trigger": "isAlive", "contents": "isAlive(${1:leek})" },
		{ "trigger": "isAlly", "contents": "isAlly(${1:leek})" },
		{ "trigger": "isDead", "contents": "isDead(${1:leek})" },
		{ "trigger": "isEmpty", "contents": "isEmpty(${1:array})" },
		{ "trigger": "isEmptyCell", "contents": "isEmptyCell(${1:cell})" },
		{ "trigger": "isEnemy", "contents": "isEnemy(${1:leek})" },
		{ "trigger": "isInlineChip", "contents": "isInlineChip(${1:chip})" },
		{ "trigger": "isInlineWeapon", "contents": "isInlineWeapon(${1:weapon})" },
		{ "trigger": "isLeek", "contents": "isLeek(${1:cell})" },
		{ "trigger": "isObstacle", "contents": "isObstacle(${1:cell})" },
		{ "trigger": "isOnSameLine", "contents": "isOnSameLine(${1:cell1}, ${2:cell2})" },
		{ "trigger": "join", "contents": "join(${1:array}, ${2:glue})" },
		{ "trigger": "length", "contents": "length(${1:string})" },
		{ "trigger": "log", "contents": "log(${1:number})" },
		{ "trigger": "log10", "contents": "log10(${1:number})" },
		{ "trigger": "max", "contents": "max(${1:a}, ${2:b})" },
		{ "trigger": "min", "contents": "min(${1:a}, ${2:b})" },
		{ "trigger": "moveAwayFrom", "contents": "moveAwayFrom(${1:leek})" },
		{ "trigger": "moveAwayFrom", "contents": "moveAwayFrom(${1:leek}, ${2:mp})" },
		{ "trigger": "moveAwayFromCell", "contents": "moveAwayFromCell(${1:cell})" },
		{ "trigger": "moveAwayFromCell", "contents": "moveAwayFromCell(${1:cell}, ${2:mp})" },
		{ "trigger": "moveAwayFromCells", "contents": "moveAwayFromCells(${1:cells})" },
		{ "trigger": "moveAwayFromCells", "contents": "moveAwayFromCells(${1:cells}, ${2:mp})" },
		{ "trigger": "moveAwayFromLeeks", "contents": "moveAwayFromLeeks(${1:leeks})" },
		{ "trigger": "moveAwayFromLeeks", "contents": "moveAwayFromLeeks(${1:leeks}, ${2:mp})" },
		{ "trigger": "moveAwayFromLine", "contents": "moveAwayFromLine(${1:cell1}, ${2:cell2})" },
		{ "trigger": "moveAwayFromLine", "contents": "moveAwayFromLine(${1:cell1}, ${2:cell2}, ${3:mp})" },
		{ "trigger": "moveToward", "contents": "moveToward(${1:leek})" },
		{ "trigger": "moveToward", "contents": "moveToward(${1:leek}, ${2:mp})" },
		{ "trigger": "moveTowardCell", "contents": "moveTowardCell(${1:cell})" },
		{ "trigger": "moveTowardCell", "contents": "moveTowardCell(${1:cell}, ${2:mp})" },
		{ "trigger": "moveTowardCells", "contents": "moveTowardCells(${1:cells})" },
		{ "trigger": "moveTowardCells", "contents": "moveTowardCells(${1:cells}, ${2:mp})" },
		{ "trigger": "moveTowardLeeks", "contents": "moveTowardLeeks(${1:leeks})" },
		{ "trigger": "moveTowardLeeks", "contents": "moveTowardLeeks(${1:leeks}, ${2:mp})" },
		{ "trigger": "moveTowardLine", "contents": "moveTowardLine(${1:cell1}, ${2:cell2})" },
		{ "trigger": "moveTowardLine", "contents": "moveTowardLine(${1:cell1}, ${2:cell2}, ${3:mp})" },
		{ "trigger": "pop", "contents": "pop(${1:array})" },
		{ "trigger": "pow", "contents": "pow(${1:base}, ${2:exp})" },
		{ "trigger": "push", "contents": "push(${1:array}, ${2:element})" },
		{ "trigger": "pushAll", "contents": "pushAll(${1:array}, ${2:elements})" },
		{ "trigger": "rand", "contents": "rand()" },
		{ "trigger": "randFloat", "contents": "randFloat(${1:a}, ${2:b})" },
		{ "trigger": "randInt", "contents": "randInt(${1:a}, ${2:b})" },
		{ "trigger": "remove", "contents": "remove(${1:array}, ${2:position})" },
		{ "trigger": "removeElement", "contents": "removeElement(${1:array}, ${2:element})" },
		{ "trigger": "replace", "contents": "replace(${1:search}, ${2:replace}, ${3:subject})" },
		{ "trigger": "reverse", "contents": "reverse(${1:array})" },
		{ "trigger": "round", "contents": "round(${1:number})" },
		{ "trigger": "say", "contents": "say(${1:message})" },
		{ "trigger": "search", "contents": "search(${1:array}, ${2:element})" },
		{ "trigger": "search", "contents": "search(${1:array}, ${2:element}, ${3:start})" },
		{ "trigger": "sendAll", "contents": "sendAll(${1:type}, ${2:params})" },
		{ "trigger": "sendTo", "contents": "sendTo(${1:leek}, ${2:type}, ${3:params})" },
		{ "trigger": "setWeapon", "contents": "setWeapon(${1:weapon})" },
		{ "trigger": "shift", "contents": "shift(${1:array})" },
		{ "trigger": "shuffle", "contents": "shuffle(${1:array})" },
		{ "trigger": "signum", "contents": "signum(${1:number})" },
		{ "trigger": "sin", "contents": "sin(${1:angle})" },
		{ "trigger": "sort", "contents": "sort(${1:array})" },
		{ "trigger": "sort", "contents": "sort(${1:array}, ${2:order})" },
		{ "trigger": "split", "contents": "split(${1:string}, ${2:delimiter})" },
		{ "trigger": "split", "contents": "split(${1:string}, ${2:delimiter}, ${3:limit})" },
		{ "trigger": "sqrt", "contents": "sqrt(${1:number})" },
		{ "trigger": "startsWith", "contents": "startsWith(${1:string}, ${2:prefix})" },
		{ "trigger": "subArray", "contents": "subArray(${1:array}, ${2:start}, ${3:size})" },
		{ "trigger": "substring", "contents": "substring(${1:string}, ${2:start})" },
		{ "trigger": "substring", "contents": "substring(${1:string}, ${2:start}, ${3:length})" },
		{ "trigger": "sum", "contents": "sum(${1:array})" },
		{ "trigger": "tan", "contents": "tan(${1:angle})" },
		{ "trigger": "toDegrees", "contents": "toDegrees(${1:radians})" },
		{ "trigger": "toLower", "contents": "toLower(${1:string})" },
		{ "trigger": "toRadians", "contents": "toRadians(${1:degrees})" },
		{ "trigger": "toUpper", "contents": "toUpper(${1:string})" },
		{ "trigger": "unshift", "contents": "unshift(${1:array}, ${2:element})" },
		{ "trigger": "useChip", "contents": "useChip(${1:chip}, ${2:leek})" },
		{ "trigger": "useChipOnCell", "contents": "useChipOnCell(${1:chip}, ${2:cell})" },
		{ "trigger": "useWeapon", "contents": "useWeapon(${1:leek})" },
		{ "trigger": "useWeaponOnCell", "contents": "useWeaponOnCell(${1:cell})" },
		{ "trigger": "CELL_EMPTY", "contents": "CELL_EMPTY" },
		{ "trigger": "CELL_OBSTACLE", "contents": "CELL_OBSTACLE" },
		{ "trigger": "CELL_PLAYER", "contents": "CELL_PLAYER" },
		{ "trigger": "CHIP_ADRENALINE", "contents": "CHIP_ADRENALINE" },
		{ "trigger": "CHIP_ARMOR", "contents": "CHIP_ARMOR" },
		{ "trigger": "CHIP_BANDAGE", "contents": "CHIP_BANDAGE" },
		{ "trigger": "CHIP_CURE", "contents": "CHIP_CURE" },
		{ "trigger": "CHIP_DOPING", "contents": "CHIP_DOPING" },
		{ "trigger": "CHIP_DRIP", "contents": "CHIP_DRIP" },
		{ "trigger": "CHIP_FLAME", "contents": "CHIP_FLAME" },
		{ "trigger": "CHIP_FLASH", "contents": "CHIP_FLASH" },
		{ "trigger": "CHIP_FORTRESS", "contents": "CHIP_FORTRESS" },
		{ "trigger": "CHIP_HELMET", "contents": "CHIP_HELMET" },
		{ "trigger": "CHIP_ICE", "contents": "CHIP_ICE" },
		{ "trigger": "CHIP_ICEBERG", "contents": "CHIP_ICEBERG" },
		{ "trigger": "CHIP_LEATHER_BOOTS", "contents": "CHIP_LEATHER_BOOTS" },
		{ "trigger": "CHIP_LIBERATION", "contents": "CHIP_LIBERATION" },
		{ "trigger": "CHIP_LIGHTNING", "contents": "CHIP_LIGHTNING" },
		{ "trigger": "CHIP_METEORITE", "contents": "CHIP_METEORITE" },
		{ "trigger": "CHIP_MOTIVATION", "contents": "CHIP_MOTIVATION" },
		{ "trigger": "CHIP_PEBBLE", "contents": "CHIP_PEBBLE" },
		{ "trigger": "CHIP_PROTEIN", "contents": "CHIP_PROTEIN" },
		{ "trigger": "CHIP_RAGE", "contents": "CHIP_RAGE" },
		{ "trigger": "CHIP_RAMPART", "contents": "CHIP_RAMPART" },
		{ "trigger": "CHIP_REFLEXES", "contents": "CHIP_REFLEXES" },
		{ "trigger": "CHIP_RESURRECTION", "contents": "CHIP_RESURRECTION" },
		{ "trigger": "CHIP_ROCK", "contents": "CHIP_ROCK" },
		{ "trigger": "CHIP_ROCKFALL", "contents": "CHIP_ROCKFALL" },
		{ "trigger": "CHIP_SEVEN_LEAGUE_BOOTS", "contents": "CHIP_SEVEN_LEAGUE_BOOTS" },
		{ "trigger": "CHIP_SHIELD", "contents": "CHIP_SHIELD" },
		{ "trigger": "CHIP_SHOCK", "contents": "CHIP_SHOCK" },
		{ "trigger": "CHIP_SPARK", "contents": "CHIP_SPARK" },
		{ "trigger": "CHIP_STALACTITE", "contents": "CHIP_STALACTITE" },
		{ "trigger": "CHIP_STEROID", "contents": "CHIP_STEROID" },
		{ "trigger": "CHIP_STRETCHING", "contents": "CHIP_STRETCHING" },
		{ "trigger": "CHIP_VACCINE", "contents": "CHIP_VACCINE" },
		{ "trigger": "CHIP_WALL", "contents": "CHIP_WALL" },
		{ "trigger": "CHIP_WARM_UP", "contents": "CHIP_WARM_UP" },
		{ "trigger": "CHIP_WINGED_BOOTS", "contents": "CHIP_WINGED_BOOTS" },
		{ "trigger": "E", "contents": "E" },
		{ "trigger": "EFFECT_ABSOLUTE_SHIELD", "contents": "EFFECT_ABSOLUTE_SHIELD" },
		{ "trigger": "EFFECT_AGILITY", "contents": "EFFECT_AGILITY" },
		{ "trigger": "EFFECT_DAMAGE", "contents": "EFFECT_DAMAGE" },
		{ "trigger": "EFFECT_DEBUFF", "contents": "EFFECT_DEBUFF" },
		{ "trigger": "EFFECT_FORCE", "contents": "EFFECT_FORCE" },
		{ "trigger": "EFFECT_HEAL", "contents": "EFFECT_HEAL" },
		{ "trigger": "EFFECT_MP", "contents": "EFFECT_MP" },
		{ "trigger": "EFFECT_RELATIVE_SHIELD", "contents": "EFFECT_RELATIVE_SHIELD" },
		{ "trigger": "EFFECT_TP", "contents": "EFFECT_TP" },
		{ "trigger": "FIGHT_CONTEXT_CHALLENGE", "contents": "FIGHT_CONTEXT_CHALLENGE" },
		{ "trigger": "FIGHT_CONTEXT_GARDEN", "contents": "FIGHT_CONTEXT_GARDEN" },
		{ "trigger": "FIGHT_CONTEXT_TEST", "contents": "FIGHT_CONTEXT_TEST" },
		{ "trigger": "FIGHT_CONTEXT_TOURNAMENT", "contents": "FIGHT_CONTEXT_TOURNAMENT" },
		{ "trigger": "FIGHT_TYPE_FARMER", "contents": "FIGHT_TYPE_FARMER" },
		{ "trigger": "FIGHT_TYPE_SOLO", "contents": "FIGHT_TYPE_SOLO" },
		{ "trigger": "FIGHT_TYPE_TEAM", "contents": "FIGHT_TYPE_TEAM" },
		{ "trigger": "INSTRUCTIONS_LIMIT", "contents": "INSTRUCTIONS_LIMIT" },
		{ "trigger": "MAX_TURNS", "contents": "MAX_TURNS" },
		{ "trigger": "MESSAGE_ATTACK", "contents": "MESSAGE_ATTACK" },
		{ "trigger": "MESSAGE_BUFF_AGILITY", "contents": "MESSAGE_BUFF_AGILITY" },
		{ "trigger": "MESSAGE_BUFF_FORCE", "contents": "MESSAGE_BUFF_FORCE" },
		{ "trigger": "MESSAGE_BUFF_MP", "contents": "MESSAGE_BUFF_MP" },
		{ "trigger": "MESSAGE_BUFF_TP", "contents": "MESSAGE_BUFF_TP" },
		{ "trigger": "MESSAGE_CUSTOM", "contents": "MESSAGE_CUSTOM" },
		{ "trigger": "MESSAGE_DEBUFF", "contents": "MESSAGE_DEBUFF" },
		{ "trigger": "MESSAGE_HEAL", "contents": "MESSAGE_HEAL" },
		{ "trigger": "MESSAGE_MOVE_AWAY", "contents": "MESSAGE_MOVE_AWAY" },
		{ "trigger": "MESSAGE_MOVE_AWAY_CELL", "contents": "MESSAGE_MOVE_AWAY_CELL" },
		{ "trigger": "MESSAGE_MOVE_TOWARD", "contents": "MESSAGE_MOVE_TOWARD" },
		{ "trigger": "MESSAGE_MOVE_TOWARD_CELL", "contents": "MESSAGE_MOVE_TOWARD_CELL" },
		{ "trigger": "MESSAGE_SHIELD", "contents": "MESSAGE_SHIELD" },
		{ "trigger": "PI", "contents": "PI" },
		{ "trigger": "SORT_ASC", "contents": "SORT_ASC" },
		{ "trigger": "SORT_DESC", "contents": "SORT_DESC" },
		{ "trigger": "USE_FAILED", "contents": "USE_FAILED" },
		{ "trigger": "USE_INVALID_COOLDOWN", "contents": "USE_INVALID_COOLDOWN" },
		{ "trigger": "USE_INVALID_POSITION", "contents": "USE_INVALID_POSITION" },
		{ "trigger": "USE_INVALID_TARGET", "contents": "USE_INVALID_TARGET" },
		{ "trigger": "USE_NOT_ENOUGH_TP", "contents": "USE_NOT_ENOUGH_TP" },
		{ "trigger": "USE_SUCCESS", "contents": "USE_SUCCESS" },
		{ "trigger": "WEAPON_DESTROYER", "contents": "WEAPON_DESTROYER" },
		{ "trigger": "WEAPON_DOUBLE_GUN", "contents": "WEAPON_DOUBLE_GUN" },
		{ "trigger": "WEAPON_ELECTRISOR", "contents": "WEAPON_ELECTRISOR" },
		{ "trigger": "WEAPON_FLAME_THROWER", "contents": "WEAPON_FLAME_THROWER" },
		{ "trigger": "WEAPON_GAZOR", "contents": "WEAPON_GAZOR" },
		{ "trigger": "WEAPON_GRENADE_LAUNCHER", "contents": "WEAPON_GRENADE_LAUNCHER" },
		{ "trigger": "WEAPON_LASER", "contents": "WEAPON_LASER" },
		{ "trigger": "WEAPON_MACHINE_GUN", "contents": "WEAPON_MACHINE_GUN" },
		{ "trigger": "WEAPON_MAGNUM", "contents": "WEAPON_MAGNUM" },
		{ "trigger": "WEAPON_M_LASER", "contents": "WEAPON_M_LASER" },
		{ "trigger": "WEAPON_PISTOL", "contents": "WEAPON_PISTOL" },
		{ "trigger": "WEAPON_SHOTGUN", "contents": "WEAPON_SHOTGUN" }
	]
}